package co.uk.grantgfleming.SimpleForumBackend.services;

import co.uk.grantgfleming.SimpleForumBackend.data_access.Post;
import co.uk.grantgfleming.SimpleForumBackend.data_access.PostRepository;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * The default implementation of {@link PostService}
 *
 * @see PostService
 */
@Service
public class PostServiceImpl implements PostService {

    /**
     * The underlying data store from which this service serves
     */
    private final PostRepository repository;
    private final ForumService forumService;

    /**
     * Creates a PostServiceImpl
     *
     * @param repository   to use as the underlying data store
     * @param forumService to check existence of ForumIds
     */
    public PostServiceImpl(PostRepository repository, ForumService forumService) {
        this.repository = repository;
        this.forumService = forumService;
    }

    @Override
    public List<Post> getPostsForForum(Long forumId) throws ForumNotFoundException {
        if (!forumService.existsById(forumId)) {
            throw new ForumNotFoundException(forumId);
        }

        return repository.findByForumId(forumId);
    }

    @Override
    public Post findPostById(Long id) throws PostNotFoundException {
        return repository.findById(id).orElseThrow(() -> new PostNotFoundException(id));
    }

    @Override
    public Post addPost(Post post) throws InvalidNewPostException, ForumNotFoundException {
        if (post.getId() != null) {
            // Id should be generated by the store. Also means that
            // this method will not accidentally overwrite existing
            // Posts
            throw new InvalidNewPostException();
        }
        if (!forumService.existsById(post.getForumId())) {
            throw new ForumNotFoundException(post.getForumId());
        }

        return repository.save(post);
    }
}
